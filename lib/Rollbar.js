Object.defineProperty(exports,"__esModule",{value:true});exports.Configuration=exports.Client=void 0;var _reactNative=require("react-native");var _rollbar=_interopRequireDefault(require("rollbar/src/react-native/rollbar"));var _merge=require("../src/merge");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?Object(arguments[i]):{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==='function'){ownKeys.push.apply(ownKeys,Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable;}));}ownKeys.forEach(function(key){_defineProperty(target,key,source[key]);});}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var NativeClient=_reactNative.NativeModules.RollbarReactNative;var Client=function Client(config){var _this=this;_classCallCheck(this,Client);this.captureUncaughtExceptions=function(){if(ErrorUtils){var previousHandler=ErrorUtils.getGlobalHandler();ErrorUtils.setGlobalHandler(function(error,isFatal){if(_this.config.captureUncaught&&_this.config.shouldSend()){_this.error(error,undefined,function(queued){if(previousHandler){previousHandler(error,isFatal);}});}else if(previousHandler){previousHandler(error,isFatal);}});}};this.captureUnhandledRejections=function(){var tracking=require('promise/setimmediate/rejection-tracking');var client=_this;tracking.enable({allRejections:true,onUnhandled:function onUnhandled(id,error){client.error(error);},onHandled:function onHandled(){}});};this.log=function(obj,extra,callback){if(!_this.config.shouldSend()){if(callback){callback(false);}return;}_this.rollbar.log(obj,extra,callback);};this.debug=function(obj,extra,callback){return _this.rollbar.debug(obj,extra,callback);};this.info=function(obj,extra,callback){return _this.rollbar.info(obj,extra,callback);};this.warning=function(obj,extra,callback){return _this.rollbar.warning(obj,extra,callback);};this.error=function(obj,extra,callback){return _this.rollbar.error(obj,extra,callback);};this.critical=function(obj,extra,callback){return _this.rollbar.critical(obj,extra,callback);};this.setPerson=function(id,name,email){_this.rollbar.setPerson({id:id,name:name,email:email});if(NativeClient){NativeClient.setPerson({id:id,name:name,email:email});}};this.clearPerson=function(){_this.rollbar.clearPerson();if(NativeClient){NativeClient.clearPerson();}};if(config instanceof Configuration){this.config=config;}else{this.config=new Configuration(config);}this.config.setPlatform(_reactNative.Platform.OS);this.rollbar=new _rollbar.default(this.config.toJSON());if(NativeClient){NativeClient.init(this.config.toJSON());}this.captureUncaughtExceptions();if(this.config.captureUnhandledRejections){this.captureUnhandledRejections();}};exports.Client=Client;var Configuration=function Configuration(accessToken,options){var _this2=this;_classCallCheck(this,Configuration);this.shouldSend=function(){return!_this2.releaseStage||!_this2.enabledReleaseStages||_this2.enabledReleaseStages.includes(_this2.releaseStage);};this.setPlatform=function(platform){if(_this2.platform===undefined){if(platform==='ios'||platform==='android'){_this2.platform=platform;}else{_this2.platform='client';}}};this.payloadOptions=function(){if(!_this2.captureDeviceInfo){return{};}return{client:{os:_this2.deviceAttributes()}};};this.deviceAttributes=function(){if(NativeClient){return JSON.parse(NativeClient.deviceAttributes());}else{return{};}};this.toJSON=function(){var result={accessToken:_this2.accessToken,endpoint:_this2.endpoint,platform:_this2.platform,logLevel:_this2.logLevel,reportLevel:_this2.reportLevel,enabled:_this2.enabled,verbose:_this2.verbose,captureDeviceInfo:_this2.captureDeviceInfo,transform:_this2.transform,rewriteFilenamePatterns:_this2.rewriteFilenamePatterns,scrubFields:_this2.scrubFields,overwriteScrubFields:_this2.overwriteScrubFields,onSendCallback:_this2.onSendCallback,checkIgnore:_this2.checkIgnore,ignoreDuplicateErrors:_this2.ignoreDuplicateErrors,payload:_objectSpread({codeBundleId:_this2.codeBundleId,releaseStage:_this2.releaseStage,enabledReleaseStages:_this2.enabledReleaseStages,appVersion:_this2.appVersion},_this2.payload),notifier:{name:'rollbar-react-native',version:_this2.version}};if(_this2.environment){result.environment=_this2.environment;}return result;};options=options||{};var pkgData=require('../package.json');this.version=pkgData['version'];this.accessToken=accessToken;this.environment=options.environment;this.logLevel=options.logLevel||'debug';this.reportLevel=options.reportLevel||undefined;this.endpoint=options.endpoint||undefined;this.appVersion=options.appVersion||undefined;this.codeBundleId=options.codeBundleId||undefined;this.releaseStage=options.releaseStage||undefined;this.enabledReleaseStages=options.enabledReleaseStages||undefined;this.captureUncaught=options.captureUncaught!==undefined?options.captureUncaught:true;this.captureUnhandledRejections=options.captureUnhandledRejections!==undefined?options.captureUnhandledRejections:!__DEV__;this.captureDeviceInfo=options.captureDeviceInfo===undefined?false:options.captureDeviceInfo;this.payload=(0,_merge.merge)(options.payload,this.payloadOptions());this.enabled=options.enabled===undefined?true:options.enabled;this.verbose=options.verbose||false;this.transform=options.transform;this.rewriteFilenamePatterns=options.rewriteFilenamePatterns;this.scrubFields=options.scrubFields||undefined;this.overwriteScrubFields=options.overwriteScrubFields||undefined;this.onSendCallback=options.onSendCallback||undefined;this.checkIgnore=options.checkIgnore||undefined;this.ignoreDuplicateErrors=options.ignoreDuplicateErrors!==undefined?options.ignoreDuplicateErrors:undefined;};exports.Configuration=Configuration;

//# sourceMappingURL=Rollbar.js.map